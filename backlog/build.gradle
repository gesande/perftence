import org.gradle.api.Task
import org.gradle.api.tasks.Exec


project(':backlog') { apply from:"$buildPlugins/gradlePlugins.gradle" }

task showBacklog (type: BashExec) { BashExec task ->
    group = 'Backlog'
    description= 'Shows backlog.'
    task.args "${task.project.projectDir}/show.sh"
}

task hereIsSomethingTodo(type: BashExec) { BashExec task ->
    group = 'Backlog'
    description= 'Shows all stuff waiting for implementation.'
    task.args "${task.project.projectDir}/show.sh | grep '\\-\\-\\-'"
}

task featuresWaiting(type: BashExec) { BashExec task ->
    group = 'Backlog'
    description= 'Shows all features waiting for implementation.'
    task.args "${task.project.projectDir}/show.sh | grep '\\-\\-\\-' | grep '#feature'"
}

task printChangeLog(type: BashExec) { BashExec task ->
    group = 'Backlog'
    description= 'Change log for backlog.'
    task.args changeLogArgs(task)
}

task copyStdLib() { Task task ->
    group ='Backlog'
    description = "Copies stdout-lib.sh for changelog scripts to ${distributionDir}."
    doLast {
        copy {
            from "${task.project.projectDir}"
            include 'stdout-lib.sh'
            into distributionDir
        }
    }
}

task createChangeLogScript(dependsOn: copyStdLib) { Task task ->
    group ='Backlog'
    description = 'Create a shell script for a specific changelog.'

    doLast {
        def String scriptFile = "${distributionDir}/changelog-from-${fromRevision}-to-${toRevision}.sh"
        exec {
            executable = 'bash'
            args "-c"
            args "echo '#!/bin/bash' > ${scriptFile}"
        }
        exec {
            executable ='bash'
            args "-c"
            args "echo 'set -eu' >> ${scriptFile}"
        }
        exec {
            executable ='bash'
            args "-c"
            args "echo 'HERE=\$(dirname \$0)' >> ${scriptFile}"
        }
        exec {
            executable ='bash'
            args "-c"
            args "echo '. \$HERE/stdout-lib.sh' >> ${scriptFile}"
        }
        exec {
            executable = 'bash'
            args "-c"
            args changeLogArgs(task) +" | sed 's/+//' " +" >> ${scriptFile}"
        }
        exec {
            executable = 'chmod'
            args "a+x"
            args "${scriptFile}"
        }
        println "Get the change log by running the script from ${scriptFile}"
    }
}

task exportChangeLog(type: BashExec, dependsOn: createChangeLogScript) { BashExec task ->
    group = 'Backlog'
    description= 'Exports changelog.'
    task.args generatedScriptFile() + replaceBacklogPlus()
}

task exportChangeLogTo(type: BashExec, dependsOn: createChangeLogScript) { BashExec task ->
    group = 'Backlog'
    description= 'Exports changelog.'
    task.args generatedScriptFile() + replaceBacklogPlus() + " >> $exportTo"
}

private String generatedScriptFile() {
    return "${distributionDir}/changelog-from-${fromRevision}-to-${toRevision}.sh"
}
private String replaceBacklogPlus(){
    return " | sed 's/ +++ //' | sed 's/ +++ /|/'"
}

private String changeLogArgs(Task task){
    def String args = "svn diff -r ${task.project.properties.fromRevision}:${task.project.properties.toRevision} ${task.project.projectDir}/show.sh | grep task-done | grep '+'"
    return args
}

public class BashExec extends Exec {

    BashExec() {
        executable="bash"
        args("-c")
    }
}
