import static org.gradle.logging.StyledTextOutput.Style

import org.gradle.api.Task
import org.gradle.api.tasks.Exec
import org.gradle.logging.StyledTextOutput
import org.gradle.logging.StyledTextOutputFactory


import net.sf.perftence.build.BashExec //DON'T TOUCH THIS


task svnRevision { Task task ->
    group ='Svn'
    description ='Shows svn revision grepped from svn info.'
    doLast {
        new ByteArrayOutputStream().withStream { os ->
            def result = exec {
                executable = 'svn'
                args = ['info']
                standardOutput = os
            }
            def outputAsString = os.toString()
            def matchLastChangedRev = outputAsString =~ /Last Changed Rev: (\d+)/
            def outputFactory = services.get(StyledTextOutputFactory).create("svn.svnRevision")
            outputFactory.withStyle(Style.Info).println("${matchLastChangedRev[0][1]}")
        }
    }
}
task listFilesNotAddedToSvn(type: BashExec) { BashExec task ->
    group ='Svn'
    description ='List of files which are not added to svn yet.'
    args  "for i in \$(svn st | grep ? | sed 's/?//'); do echo \$(realpath \$i); done;"
}

task addNewFilesToSvn(type: BashExec) { BashExec task ->
    group ='Svn'
    description ='Add the new files into svn.'
    args  "for i in \$(svn st | grep ? | sed 's/?//'); do svn add \$i; done;"
}

task svnStatus  { Task task ->
    group ='Svn'
    description ='Shows svn st and svnversion nicely outputted.'
    doLast {
        def svnStatus=""
        new ByteArrayOutputStream().withStream { os ->
            def result = exec {
                executable = 'svn'
                args = ['st']
                standardOutput = os
            }
            svnStatus = os.toString()
        }
        def svnversion=""
        new ByteArrayOutputStream().withStream { os ->
            def result = exec {
                executable = 'svnversion'
                standardOutput = os
            }
            svnversion = os.toString()
        }
        def outputFactory = services.get(StyledTextOutputFactory).create("svn.svnStatus")
        outputFactory.withStyle(Style.Info).println("${svnStatus}")
        outputFactory.withStyle(Style.Info).println("Revision: ${svnversion}")
    }
}
public class BashExec extends Exec {

    BashExec() {
        executable="bash"
        args("-c")
    }
}