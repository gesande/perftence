import net.sf.mygradlebuild.plugins.PerftenceContinousBuildPlugin
import net.sf.mygradlebuild.plugins.EnvironmentVariablesPlugin
import net.sf.mygradlebuild.plugins.JavaDistributionPlugin
import net.sf.mygradlebuild.plugins.MavenCentral
import net.sf.mygradlebuild.plugins.NewJavaProjectToSvnPlugin
import net.sf.mygradlebuild.plugins.ReportingPlugin
import net.sf.mygradlebuild.plugins.SvnPlugin
import net.sf.perftence.build.ExportAntBuildFilePlugin
import net.sf.perftence.build.PerftenceBuildPlugin

import org.gradle.api.JavaVersion
import org.gradle.api.Project

ext {
    //make sure these files exist
    jdtInputFile="${buildScripts}/template/for/eclipse/org.eclipse.jdt.core.prefs"

    pmdSettings="${buildScripts}/template/for/pmd/.pmd"

    distributionDir="$buildDir/distributions"

    toolsDir="${projectDir}/tools"

    emmaPlugin="${buildScripts}/plugins/jacoco.gradle"

    artifactVersion ='2.1.4'

    distributionExcludes = ["*-lib.jar"]
    distributionBasename = 'perftence-distribution'

    volundrVersion='2.1.1'

    commonsCollectionsVersion = '3.2.1'
    slf4jVersion='1.6.1'
    log4jVersion='1.2.16'
    jfreechartVersion='1.0.12'
    jcommonVersion='1.0.15'
    junitVersion='4.10'
    afreechartVersion='0.0.4'
}

apply plugin : MavenCentral
apply plugin : NewJavaProjectToSvnPlugin
apply plugin : ReportingPlugin
apply plugin : EnvironmentVariablesPlugin
apply plugin : SvnPlugin
apply plugin : ExportAntBuildFilePlugin

apply plugin : PerftenceBuildPlugin

reportingSettings {
    toolsDirectory = "${toolsDir}"
    onlyAnalyze = 'net.sf.perftence'
    findbugsVersion = '3.0.1'
}

subprojects { Project prj ->

    repositories { flatDir { dirs "$rootProject.projectDir/lib-repo" } }

    version = prj.parent.artifactVersion
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    apply plugin : PerftenceContinousBuildPlugin
    //    forkJdt { jdtInputFile = "${project.properties.jdtInputFile}"  }
    pmd { toolVersion = '4.3'	}
}

