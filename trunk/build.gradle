ext.buildPlugins="$projectDir/build/plugins/"
ext.libraryPlugin="$buildPlugins/library.gradle"
ext.emmaPlugin="$buildPlugins/emma.gradle"
ext.distributionPlugin="$buildPlugins/distribution.gradle"

subprojects {
    apply from: "$buildPlugins/java.gradle"
    apply from: "$buildPlugins/eclipse.gradle"
    apply from: "$buildPlugins/findbugs.gradle"
    apply from: "$buildPlugins/jdepend.gradle"
    apply from: "$buildPlugins/pmd.gradle"
    
    task "show-revision" << {
        new ByteArrayOutputStream().withStream { os ->
            def result = exec {
                executable = 'svn'
                args = ['info']
                standardOutput = os
            }
            def outputAsString = os.toString()
            def matchLastChangedRev = outputAsString =~ /Last Changed Rev: (\d+)/
            println "${matchLastChangedRev[0][1]}"
        }
    }

    version = '1.0-BETA'

    task "show-version" << { println version }

    repositories { 
        mavenCentral()
    }

    task "init-libs" << { task ->
        def libDir = new File(task.project.projectDir, 'lib')
        libDir.mkdirs()
        def libSourcesDir = new File(task.project.projectDir, 'lib-sources')
        libSourcesDir.mkdirs()
    }

    task continous(dependsOn: [ test, findbugsMain, pmdProductionCode, jdependMain ])
}

project(':log4j-1.2.16') { prj ->
    apply from: "$libraryPlugin"
    eclipse {
        classpath {
            file {
                withXml {
                    def node = it.asNode()
                    def componentPath = "${prj.projectDir}/lib/log4j-1.2.16.jar"
                    def componentSourcePath = "${prj.projectDir}/lib-sources/apache-log4j-1.2.16.zip"
                    node.appendNode('classpathentry', [kind: 'lib', path: componentPath, exported: true, sourcepath: componentSourcePath ])
                }
            }
        }
    }
}

project(':junit-4.10') { prj ->
    apply from: "$libraryPlugin"
    eclipse {
        classpath {
            file {
                withXml {
                    def node = it.asNode()
                    def componentPath = "${prj.projectDir}/lib/junit-4.10.jar"
                    def componentSourcePath = "${prj.projectDir}/lib-sources/junit-4.10-src.jar"
                    node.appendNode('classpathentry', [kind: 'lib', path: componentPath, exported: true, sourcepath: componentSourcePath ])
                }
            }
        }
    }
}

project(':jcommon-1.0.15') { prj ->
    apply from: "$libraryPlugin"

    prj.ext.libraryProjectLibrary="jcommon-1.0.15.jar"
    prj.ext.libraryProjectSources="jcommon-1.0.15.zip"

    eclipse {
        classpath {
            file {
                withXml {
                    def node = it.asNode()
                    def componentPath = "${projectDir}/lib/${prj.ext.libraryProjectLibrary}"
                    def componentSourcePath = "${projectDir}/lib-sources/${prj.ext.libraryProjectSources}"
                    node.appendNode('classpathentry', [kind: 'lib', path: componentPath, exported: true, sourcepath: componentSourcePath ])
                }
            }
        }
    }
}

project(':jfreechart-1.0.12') { prj ->
    apply from: "$libraryPlugin"
    eclipse {
        classpath {
            file {
                withXml {
                    def node = it.asNode()
                    def componentPath = "${prj.projectDir}/lib/jfreechart-1.0.12.jar"
                    def componentSourcePath = "${prj.projectDir}/lib-sources/jfreechart-1.0.12.zip"
                    node.appendNode('classpathentry', [kind: 'lib', path: componentPath, exported: true, sourcepath: componentSourcePath ])
                }
            }
        }
    }
}

project(':slf4j-api-1.6.1') { prj ->
    apply from: "$libraryPlugin"
    eclipse {
        classpath {
            file {
                withXml {
                    def node = it.asNode()
                    def componentPath = "${prj.projectDir}/lib/slf4j-api-1.6.1.jar"
                    def componentSourcePath = "${prj.projectDir}/lib-sources/slf4j-api-1.6.1-sources.jar"
                    node.appendNode('classpathentry', [kind: 'lib', path: componentPath, exported: true, sourcepath: componentSourcePath ])
                }
            }
        }
    }
}

project(':slf4j-log4j12-1.6.1') { prj ->
    apply from: "$libraryPlugin"
    eclipse {
        classpath {
            file {
                withXml {
                    def node = it.asNode()
                    def componentPath = "${prj.projectDir}/lib/slf4j-log4j12-1.6.1.jar"
                    def componentSourcePath = "${prj.projectDir}/lib-sources/slf4j-log4j12-1.6.1-sources.jar"
                    node.appendNode('classpathentry', [kind: 'lib', path: componentPath, exported: true, sourcepath: componentSourcePath ])
                }
            }
        }
    }
}

project(':commons-collections-3.2.1') { prj ->
    apply from: "$libraryPlugin"
    eclipse {
        classpath {
            file {
                withXml {
                    def node = it.asNode()
                    def componentPath = "${prj.projectDir}/lib/commons-collections-3.2.1.jar"
                    def componentSourcePath = "${prj.projectDir}/lib-sources/commons-collections-3.2.1-sources.jar"
                    node.appendNode('classpathentry', [kind: 'lib', path: componentPath, exported: true, sourcepath: componentSourcePath ])
                }
            }
        }
    }
}

project(':perftence') {
    apply from:"$emmaPlugin"
    apply from:"$distributionPlugin"

    version = '1.0-BETA'

    tasks.withType(FindBugs){
        ignoreFailures = true
    }

    dependencies {
        compile project(':commons-collections-3.2.1')
        compile project(':slf4j-api-1.6.1')
        compile project(':jfreechart-1.0.12')
        compile project(':jcommon-1.0.15')
        compile project(':perftence-bag')
        compile project(':perftence-fileutil')
        testCompile project(':junit-4.10')
        testRuntime project(':slf4j-log4j12-1.6.1')
        testRuntime project(':log4j-1.2.16')
    }
}

project(':perftence-junit') {
    apply from:"$emmaPlugin"
    apply from:"$distributionPlugin"

    version = '1.0'

    dependencies {
        compile project(':perftence')
        compile project(':perftence-api')
        compile project(':perftence-bag')
        compile project(':junit-4.10')
        compile project(':commons-collections-3.2.1')
        compile project(':slf4j-api-1.6.1')
        compile project(':jfreechart-1.0.12')
        compile project(':jcommon-1.0.15')
        testRuntime project(':slf4j-log4j12-1.6.1')
        testRuntime project(':log4j-1.2.16')
    }
}

project(':acceptance-tests') {
    dependencies {
        testCompile project(':perftence')
        testCompile project(':perftence-junit')
        testCompile project(':junit-4.10')
        testCompile project(':commons-collections-3.2.1')
        testCompile project(':slf4j-api-1.6.1')
        testCompile project(':jfreechart-1.0.12')
        testCompile project(':jcommon-1.0.15')
        testRuntime project(':slf4j-log4j12-1.6.1')
        testRuntime project(':log4j-1.2.16')
    }
}

project(':perftence-bag'){
    apply from:"$emmaPlugin"
    apply from:"$distributionPlugin"

    version ='1.0'

    dependencies {
        compile project(':commons-collections-3.2.1')
        compile project(':jcommon-1.0.15')
        testCompile project(':junit-4.10')
    }
}

project(':perftence-experimental') {
    apply from:"$emmaPlugin"

    dependencies {
        compile project(':perftence')
        compile project(':commons-collections-3.2.1')
        compile project(':slf4j-api-1.6.1')
        compile project(':junit-4.10')
        testCompile project(':perftence-junit')
        testCompile project(':jfreechart-1.0.12')
        testCompile project(':jcommon-1.0.15')
        testRuntime project(':slf4j-log4j12-1.6.1')
        testRuntime project(':log4j-1.2.16')
    }
}


project(':build') {
    eclipseJdt.inputFile=file('template/for/eclipse/org.eclipse.jdt.core.prefs')
}

project(':perftence-api') {
    apply from:"$emmaPlugin"
    apply from:"$distributionPlugin"

    version = '1.0'

    dependencies {
        compile project(':perftence')
        compile project(':commons-collections-3.2.1')
        compile project(':slf4j-api-1.6.1')
        compile project(':jfreechart-1.0.12')
        compile project(':jcommon-1.0.15')
        runtime project(':slf4j-log4j12-1.6.1')
        runtime project(':log4j-1.2.16')
        testCompile project(':junit-4.10')
    }

}

project(':mainentrypoint-example') {
    apply from:"$distributionPlugin"

    dependencies {
        compile project(':perftence')
        compile project(':perftence-api')
        compile project(':commons-collections-3.2.1')
        compile project(':slf4j-api-1.6.1')
        compile project(':jfreechart-1.0.12')
        compile project(':jcommon-1.0.15')
        runtime project(':slf4j-log4j12-1.6.1')
        runtime project(':log4j-1.2.16')
    }

}

project(':fluent-based-example') {

    apply from:"$distributionPlugin"

    dependencies {
        testCompile project(':perftence')
        testCompile project(':perftence-junit')
        testCompile project(':commons-collections-3.2.1')
        testCompile project(':slf4j-api-1.6.1')
        testCompile project(':jfreechart-1.0.12')
        testCompile project(':jcommon-1.0.15')
        runtime project(':slf4j-log4j12-1.6.1')
        runtime project(':log4j-1.2.16')
    }
}

project(':agent-based-example') {
    apply from:"$distributionPlugin"

    dependencies {
        testCompile project(':perftence')
        testCompile project(':perftence-junit')
        testCompile project(':commons-collections-3.2.1')
        testCompile project(':slf4j-api-1.6.1')
        testCompile project(':jfreechart-1.0.12')
        testCompile project(':jcommon-1.0.15')
        runtime project(':slf4j-log4j12-1.6.1')
        runtime project(':log4j-1.2.16')
    }
}

project(':responsecode-summaryappender') {
    apply from:"$emmaPlugin"
    apply from:"$distributionPlugin"

    version ='1.0'

    dependencies {
        compile project(':perftence')
        compile project(':perftence-bag')
        compile project(':commons-collections-3.2.1')
        compile project(':jcommon-1.0.15')
        testCompile project(':junit-4.10')
    }
}

project(':perftence-junit-utils') {
    apply from:"$emmaPlugin"
    apply from:"$distributionPlugin"

    version ='1.0'

    dependencies { compile project(':junit-4.10') }
}

project ('filebased-reporting-proto') {
    apply from:"$emmaPlugin"
    apply from:"$distributionPlugin"

    version ='1.0'

    dependencies {
        compile project(':perftence-linereader')
        compile project(':perftence')
        compile project(':commons-collections-3.2.1')
        compile project(':slf4j-api-1.6.1')
        compile project(':jfreechart-1.0.12')
        compile project(':jcommon-1.0.15')
        testCompile project(':perftence-junit')
        runtime project(':slf4j-log4j12-1.6.1')
        runtime project(':log4j-1.2.16')
    }
}

project(':perftence-linereader'){
    apply from:"$emmaPlugin"
    apply from:"$distributionPlugin"

    version ='1.0'

    dependencies {
        testCompile project(':junit-4.10')
    }

}

project(':perftence-fileutil') {
    apply from:"$emmaPlugin"
    apply from:"$distributionPlugin"

    version ='1.0'

    dependencies {
        testCompile project(':junit-4.10')
    }
}

project(':perftence-classhelper') { 
    apply from:"$emmaPlugin"
    apply from:"$distributionPlugin"

    version ='1.0'

    dependencies {
        testCompile project(':slf4j-api-1.6.1')
        testCompile project(':junit-4.10')
        testRuntime project(':slf4j-log4j12-1.6.1')
        testRuntime project(':log4j-1.2.16')
        testCompile project(':junit-4.10')
    }

}

