import org.gradle.api.file.FileTree
import org.gradle.api.tasks.Copy
import org.gradle.api.tasks.bundling.Tar

task copyDistribution(type: Copy) {
    group = 'Distribution'
    description = 'Copies project specific distribution archives to distribution.'
    def FileTree tree=fileTree("$projectDir")
    tree.include '**/build/distributions/*.zip'
    from 'COPYING'
    from tree.getFiles()
    into 'distribution'
}

task archiveDistribution(type: Tar) {
    group = 'Distribution'
    description = "Makes the distribution artifact and copies it to ${distributionDir}."
    outputs.upToDateWhen { false }

    def revision =""
    new ByteArrayOutputStream().withStream { os ->
        def result = exec {
            executable = 'svnversion'
            args = ['']
            standardOutput = os
        }
        revision = os.toString()
    }

    def artifactRevision="${artifactVersion}-R${revision}"
    from 'distribution'
    destinationDir = file("$distributionDir")
    baseName = "perftence-distribution"
    version ="${artifactRevision}"
    extension = 'tar'
}

task copyDistributionSources(type: Copy) {
    group = 'Distribution'
    description = "Copies project specific source jars to the distribution sources directory."
    def FileTree tree=fileTree("$projectDir")
    tree.include('**/build/libs/*sources.jar')
    from tree.getFiles()
    into 'distribution/sources'
}

task removeDistributionDir { 
	group = 'Distribution'
	description = 'Removes distribution directory.'
	doLast { delete("distribution") }
}

task makeDistributionPackage(dependsOn: [
    copyDistribution,
    copyDistributionSources,
    archiveDistribution,
    removeDistributionDir]
) {
    group = 'Distribution'
    description = "Makes the distribution package."
	
}

